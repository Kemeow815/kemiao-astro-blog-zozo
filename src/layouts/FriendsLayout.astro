---
// src/layouts/Layout.astro
import type { Props } from 'astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

const { title, description = '喵落阁 - 克喵的博客' } = Astro.props as { title: string; description?: string };
---

<!DOCTYPE html>
<html lang="zh-CN" class="scroll-smooth">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content={description}>
  
  <title>{title}</title>
  
  <!-- 主题切换脚本 -->
  <script is:inline>
    // 检测系统主题偏好
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // 获取本地存储的主题设置
    const storedTheme = localStorage.getItem('theme');
    
    // 确定初始主题
    const initialTheme = storedTheme || (prefersDark ? 'dark' : 'light');
    
    // 设置初始主题
    document.documentElement.classList.toggle('dark', initialTheme === 'dark');
    localStorage.setItem('theme', initialTheme);
  </script>
  
  <!-- 样式 -->
  <style is:global>
    :root {
      --primary: #6366f1;
      --primary-light: #818cf8;
      --primary-dark: #4f46e5;
      --bg-light: #ffffff;
      --bg-dark: #0f172a;
      --text-light: #1e293b;
      --text-dark: #f1f5f9;
      --card-bg-light: #f8fafc;
      --card-bg-dark: #1e293b;
      --border-light: #e2e8f0;
      --border-dark: #334155;
      --gray-light: #64748b;
      --gray-dark: #94a3b8;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      background-color: var(--bg-light);
      color: var(--text-light);
      transition: background-color 0.3s ease, color 0.3s ease;
      line-height: 1.6;
    }
    
    .dark body {
      background-color: var(--bg-dark);
      color: var(--text-dark);
    }
    
    a {
      color: var(--primary);
      text-decoration: none;
      transition: color 0.2s;
    }
    
    a:hover {
      color: var(--primary-dark);
      text-decoration: underline;
    }
    
    .dark a:hover {
      color: var(--primary-light);
    }
    
    .container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }
    
    /* 按钮样式 */
    .btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      background-color: var(--primary);
      color: white;
      border-radius: 0.5rem;
      font-weight: 600;
      transition: all 0.2s ease;
      border: none;
      cursor: pointer;
      text-align: center;
    }
    
    .btn:hover {
      background-color: var(--primary-dark);
      transform: translateY(-2px);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      text-decoration: none;
    }
    
    .dark .btn:hover {
      background-color: var(--primary-light);
    }
    
    /* 卡片样式 */
    .card {
      background-color: var(--card-bg-light);
      border: 1px solid var(--border-light);
      border-radius: 1rem;
      overflow: hidden;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .dark .card {
      background-color: var(--card-bg-dark);
      border-color: var(--border-dark);
    }
    
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    
    /* 响应式设计 */
    @media (max-width: 768px) {
      .container {
        padding: 0 1rem;
      }
    }
  </style>
</head>

<body class="min-h-screen flex flex-col">
  <Header title={title} />
  
  <main class="flex-grow">
    <div class="container py-8">
      <slot />
    </div>
  </main>
  
  <Footer />
  
  <!-- 主题切换脚本 -->
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const themeToggle = document.getElementById('theme-toggle');
      
      if (themeToggle) {
        themeToggle.addEventListener('click', () => {
          const isDark = document.documentElement.classList.toggle('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
      }
    });
  </script>
</body>
</html>